library(R.matlab)
MNIST <- readMat(file.choose())

X <- MNIST$X
y <- MNIST$y
n <- dim(X)[1];n <- dim(X)[2]

vectorize<-function(j){
  k <- rep(0,10)
  k[j+1] <- 1 
  k
}

Y <- t(apply(matrix(y),1,vectorize))
B <- matrix(runif(m*10,0,1),nrow=m,ncol=10)

create_z <- function(X,B){
  z <- 1/rowSums(exp(X %*% B))
  return(diag(z))
}

gradient <- function(X,Z,B,Y){
  t(X) %*% (Z %*% exp(X%*%B) - Y)
}

f<-function(X,B){
  z <- rowSums(exp(X %*% B))
  holder <- 0
  for(i in 1:n){
    holder <- holder - log( exp(X[i,] %*% B[,(y[i]+1)]) / z[i] ) 
  }                  
  return(holder)
}

iter <- 1
alpha <- 0.1
beta <- 0.1
error <- rep(0,1000)

while(iter <= 1000){
  Z <- create_z(X,B)
  f_grad <- gradient(X,Z,B,Y)
  step <- 0.01
  
  while( f(X,B - step * f_grad) - f(X,B) + alpha * step * sum(f_grad^2) >= 0 ){
    step <- beta * step
  }
  
  B <- B - step * f_grad
  iter <- iter + 1
  error[iter] <- f(X,B)
}

plot(1:1000,error,type='l',ylab='error',main='value of objective function')
